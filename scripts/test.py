import numpy as np
from nx_itertools import combinations
import json
import os
import datetime
import time
from datetime import timezone

if datetime.date(2017,11,1) < datetime.date(2018,11,1):
    print('yes')

a = [np.array([0.7636869 , 0.13443413, 0.21446094, 0.5       , 0.18377382,
0.04641768, 0.91966605, 0.5       , 0.84749961, 0.97917318,
0.851991  , 0.5       , 0.72108829, 0.78465033, 0.14818916,
0.25365055, 0.79870069, 0.77456033, 0.90777475, 0.89858884,
0.89133245, 0.5       , 0.84950811, 0.80195403, 0.87870729,
0.76059002, 0.5       , 0.5       , 0.5       , 0.20804548,
0.5       , 0.5       , 0.77291179, 0.23502743, 0.79400206,
0.81328368, 0.78207457, 0.10138121, 0.97845685, 0.5       ,
0.5       , 0.78928041, 0.90328074, 0.5       , 0.09375331,
0.22980583, 0.85279429, 0.74927402, 0.5       , 0.85220015,
0.90365177, 0.76590955, 0.76466906, 0.22913525, 0.2163088 ,
0.70037431, 0.8514784 , 0.5       , 0.87315702, 0.87325144,
0.90133297, 0.84642416, 0.5       , 0.14916086, 0.5       ,
0.86186546, 0.81251991, 0.18140292, 0.81663561, 0.1250231 ,
0.21002373, 0.5       , 0.93945777, 0.80405843, 0.01640064,
0.5       , 0.14343122, 0.5       , 0.83046019, 0.5       ,
0.89122748]), np.array([0.5       , 0.906941  , 0.5       , 0.5       , 0.78223073,
0.86066753, 0.5       , 0.80949187, 0.5       , 0.5       ,
0.5       , 0.5       , 0.97119963, 0.82106775, 0.7214514 ,
0.5       , 0.77681637, 0.5       , 0.5       , 0.5       ,
0.5       , 0.5       , 0.73809278, 0.75981069, 0.5       ,
0.5       , 0.5       , 0.5       , 0.5       , 0.5       ,
0.5       , 0.75701487, 0.83730328, 0.95461911, 0.84367311,
0.84302986, 0.5       , 0.5       , 0.92317343, 0.5       ]), np.array([0.90136975, 0.5       , 0.5       , 0.91304791, 0.5       ,
0.76101506, 0.5       , 0.70066386, 0.5       , 0.5       ,
0.76124573, 0.74247599, 0.5       , 0.5       , 0.91731298,
0.84696341]), np.array([0.5       , 0.05719036, 0.92884535, 0.70425087, 0.96128005,
0.93162656, 0.16181499, 0.19317934, 0.82768261, 0.8598032 ,
0.5       , 0.71285796, 0.72484803, 0.87262905, 0.5       ,
0.80669367, 0.25068241, 0.74199128, 0.24541727, 0.5       ,
0.70226735, 0.5       , 0.75309086, 0.5       , 0.19050148,
0.89720905, 0.85486555, 0.7846179 , 0.93715858, 0.5       ,
0.5       , 0.94092333, 0.5       , 0.85455143, 0.81311154,
0.907552  ]), np.array([0.5       , 0.19576159, 0.91143459, 0.88025337, 0.5       ,
0.83140171, 0.23497251, 0.2137939 , 0.5       , 0.17752892,
0.83173126, 0.91647124, 0.16567704, 0.73831296, 0.17155534,
0.5       , 0.5       , 0.84486067, 0.91219717, 0.12576637,
0.05512875, 0.08115244, 0.8374272 , 0.20435679, 0.5       ,
0.83591557, 0.1398426 , 0.7022922 , 0.5       , 0.09212568,
0.5       , 0.20209259, 0.5       , 0.5       , 0.08212894,
0.5       , 0.89652145, 0.22714719, 0.74347782, 0.5       ,
0.70447677, 0.70102167, 0.79312336, 0.74751848, 0.5       ,
0.69347632, 0.14817578, 0.81903595, 0.5       , 0.85493159,
0.19937515]), np.array([0.82086325, 0.7300027 , 0.5       , 0.11540458, 0.74544966,
0.75081134, 0.5       , 0.5       , 0.04670656, 0.80961978,
0.24827194, 0.5       , 0.6935631 , 0.5       , 0.88982987,
0.79480135, 0.5       , 0.27021542, 0.18416139, 0.29959476,
0.95280159, 0.5       , 0.96581054, 0.94100529, 0.93320394,
0.5       , 0.79528368, 0.5       , 0.90036023, 0.5       ,
0.5       , 0.79663527, 0.5       , 0.5       , 0.96031106,
0.5       , 0.5       , 0.80531377, 0.5       , 0.5       ,
0.5       , 0.86519825, 0.88511127, 0.5       , 0.5       ,
0.5       , 0.830302  , 0.5       ]), np.array([0.5       , 0.5       , 0.5       , 0.5       , 0.5       ,
0.84256148, 0.5       , 0.70681775, 0.85682011, 0.5       ,
0.5       , 0.5       , 0.5       , 0.26298964, 0.5       ,
0.5       , 0.5       , 0.94030583, 0.5       , 0.85790479,
0.89239687, 0.98534399, 0.5       ]), np.array([0.5       , 0.98736715, 0.81062162, 0.5       , 0.5       ,
0.5       , 0.5       , 0.98629236, 0.5       , 0.75701487,
0.83730328, 0.87852103]), np.array([0.5       , 0.19996145, 0.84484732, 0.04056776, 0.81110692,
0.72971892, 0.80484587, 0.5       , 0.90976775, 0.20593497,
0.22908556, 0.5       , 0.5       , 0.5       , 0.5       ,
0.5       , 0.5       , 0.73269659, 0.5       , 0.5       ,
0.5       , 0.5       , 0.5       , 0.7440331 , 0.5       ,
0.5       , 0.5       , 0.8979671 , 0.5       , 0.5       ,
0.5       , 0.79364336, 0.07361448, 0.05282354, 0.03976828,
0.5       , 0.5       , 0.28731143, 0.75995326, 0.5       ,
0.13074717, 0.5       , 0.13383323, 0.8080948 , 0.5       ,
0.5       , 0.5       , 0.69126564, 0.1975475 , 0.69873154,
0.5       , 0.86887103, 0.86250472, 0.5       , 0.5       ,
0.5       , 0.5       , 0.5       , 0.5       , 0.20721823,
0.10817388, 0.15937969, 0.91467428, 0.5       , 0.1805113 ,
0.70165169, 0.5       , 0.5       , 0.86372268, 0.84379375,
0.7360248 , 0.5       , 0.25686288, 0.74910808, 0.77645636,
0.5       , 0.09618714, 0.5       , 0.5       , 0.5       ,
0.06093135, 0.11093625, 0.22077331, 0.76886523, 0.72791779,
0.93188989, 0.5       , 0.3170417 , 0.8055824 , 0.1726042 ,
0.5       , 0.02440882, 0.8922205 , 0.8012687 , 0.5       ,
0.77187747, 0.81004047, 0.74512351]), np.array([0.70535576, 0.78520995, 0.5       , 0.11303785, 0.5       ,
0.5       , 0.5       , 0.75726604, 0.91366315, 0.5       ,
0.81346595, 0.89877772, 0.80437428, 0.78228438, 0.90455437,
0.5       , 0.75594723, 0.22766471, 0.72411686, 0.26377732,
0.72831225, 0.5       , 0.5       , 0.69343162, 0.5       ,
0.5       , 0.87185872, 0.5       , 0.71680123, 0.21631762,
0.75267392, 0.5       , 0.78236502, 0.81099933, 0.128672  ,
0.76048553, 0.5       , 0.5       , 0.25868741, 0.5       ,
0.19319817, 0.5       , 0.78120375, 0.5       , 0.5       ,
0.5       , 0.5       , 0.5       , 0.5       , 0.72962177,
0.5       , 0.09407789, 0.7567445 , 0.92145127, 0.00595555,
0.93771219, 0.5       , 0.5       , 0.20483303, 0.27208257,
0.2461133 , 0.72793609, 0.5       , 0.1573379 , 0.91880912,
0.5       , 0.5       , 0.5       ]), np.array([0.5       , 0.5       , 0.88700467, 0.99145555, 0.5       ,
0.90908676, 0.8325057 , 0.76501763, 0.95108753, 0.9452942 ,
0.9230361 , 0.79507053, 0.82273698, 0.95789981, 0.5       ,
0.95651835, 0.5       , 0.84789193, 0.82760394, 0.31293672,
0.5       , 0.5       , 0.94058883]), np.array([0.5       , 0.25486398, 0.5       ])]

dt = datetime.datetime(2017, 11, 15, 5)
input = ""

if november = 11
stockDataTime = datetime.datetime(int(line[:4]), int(line[5:7]), int(line[8:10]))

timestamp = dt.replace(tzinfo=timezone.utc).timestamp()
print(int(timestamp))